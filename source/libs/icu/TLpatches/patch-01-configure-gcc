	For TL, we do not want to prefer clang(++) for ICU
	when the whole rest of the tree prefers gcc.

*** source/configure	Tue Jan  8 10:13:37 2019
--- source/configure~	Mon Oct  1 15:39:56 2018
***************
*** 2861,2865 ****
  ac_compiler_gnu=$ac_cv_c_compiler_gnu
  if test -n "$ac_tool_prefix"; then
!   for ac_prog in gcc cc clang c99 c89 xlc_r xlc cl.exe icc
    do
      # Extract the first word of "$ac_tool_prefix$ac_prog", so it can be a program name with args.
--- 2861,2865 ----
  ac_compiler_gnu=$ac_cv_c_compiler_gnu
  if test -n "$ac_tool_prefix"; then
!   for ac_prog in clang gcc cc c99 c89 xlc_r xlc cl.exe icc
    do
      # Extract the first word of "$ac_tool_prefix$ac_prog", so it can be a program name with args.
***************
*** 2905,2909 ****
  if test -z "$CC"; then
    ac_ct_CC=$CC
!   for ac_prog in gcc cc clang c99 c89 xlc_r xlc cl.exe icc
  do
    # Extract the first word of "$ac_prog", so it can be a program name with args.
--- 2905,2909 ----
  if test -z "$CC"; then
    ac_ct_CC=$CC
!   for ac_prog in clang gcc cc c99 c89 xlc_r xlc cl.exe icc
  do
    # Extract the first word of "$ac_prog", so it can be a program name with args.
***************
*** 3464,3468 ****
    else
      if test -n "$ac_tool_prefix"; then
!   for ac_prog in g++ c++ clang++ gpp xlC_r xlC aCC CC cxx cc++ cl.exe icc FCC KCC RCC
    do
      # Extract the first word of "$ac_tool_prefix$ac_prog", so it can be a program name with args.
--- 3464,3468 ----
    else
      if test -n "$ac_tool_prefix"; then
!   for ac_prog in clang++ g++ c++ gpp xlC_r xlC aCC CC cxx cc++ cl.exe icc FCC KCC RCC
    do
      # Extract the first word of "$ac_tool_prefix$ac_prog", so it can be a program name with args.
***************
*** 3508,3512 ****
  if test -z "$CXX"; then
    ac_ct_CXX=$CXX
!   for ac_prog in g++ c++ clang++ gpp xlC_r xlC aCC CC cxx cc++ cl.exe icc FCC KCC RCC
  do
    # Extract the first word of "$ac_prog", so it can be a program name with args.
--- 3508,3512 ----
  if test -z "$CXX"; then
    ac_ct_CXX=$CXX
!   for ac_prog in clang++ g++ c++ gpp xlC_r xlC aCC CC cxx cc++ cl.exe icc FCC KCC RCC
  do
    # Extract the first word of "$ac_prog", so it can be a program name with args.
